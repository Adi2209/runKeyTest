pipelines: 
  - name: Sanity_Input_Step_Status
    steps:
      - name: start_step_status_check
        type: Bash
        configuration:
          inputResources:
            - name: stepStatusBag
        execution:
          onExecute:
            - echo "starting check"

      - name: success_step
        type: Bash
        configuration:
          inputSteps:
            - name: start_step_status_check
        execution:
          onStart:
            - echo "starting step which will be success"
          onExecute:
            - echo "This step ran successfully"
          onComplete:
            - echo "this should trigger sucess_step_child"

      - name: failed_step
        type: Bash
        configuration:
          allowFailure: true
          inputSteps:
            - name: start_step_status_check
        execution:
          onStart:
            - echo "starting step which will going to be failed"
          onExecute:
            - echo "This step will fail"
            - exit 1
          onComplete:
            - echo "this should trigger failed_step_child"

      - name: timeout_step
        type: Bash
        configuration:
          allowFailure: true
          timeoutSeconds: 10
          inputSteps:
            - name: start_step_status_check
        execution:
          onStart:
            - echo "starting step that will be going to timeout"
          onExecute:
            - echo "This step will be timedout"
            - sleep 100
          onComplete:
            - echo "this should trigger timeout_step_child"

      - name: success_step_child
        type: Bash
        configuration:
          inputSteps: 
            - name: success_step
              status: 
                - success
        execution:
          onStart: 
            -  echo "step that is triggered due to success_step"
          onExecute:
            - echo "this step should be success"
          onComplete:
            - echo "this step is completed"

      - name: failed_step_child
        type: Bash
        configuration:
          inputSteps: 
            - name: failed_step
              status: 
                - failure
        execution:
          onStart: 
            -  echo "step that is triggered due to failed_step"
          onExecute:
            - echo "this step should be success"
          onComplete:
            - echo "this step is completed"

      - name: timeout_step_child
        type: Bash
        configuration:
          inputSteps: 
            - name: timeout_step
              status: 
                - timeout
        execution:
          onStart: 
            -  echo "step that is triggered due to timeout_step"
          onExecute:
            - echo "this step should be success"
          onComplete:
            - echo "this step is completed"

      - name: approve_sanity
        type: Bash
        configuration:
          inputSteps:
            - name: success_step_child
              status:
                - success
            - name: failed_step_child
              status:
                - success
            - name: timeout_step_child
              status:
                - success
          inputResources:
            - name: this_repo
            - name: stepStatusBag
          integrations:
            - name: sanity_platform
        execution:
          onExecute:
            - pushd ${res_this_repo_resourcePath}/scripts
            - npm ci
            - export API_URL="${int_sanity_platform_url}/pipelines/api/v1"
            - export API_TOKEN="Bearer ${int_sanity_platform_accessToken}"
            - node index.js sanityGate --stepName $qualityGateStep --runId $triggerRunId --approved --comment "approved all tests passed"

      - name: reject_sanity
        type: Bash
        configuration:
          inputSteps:
            - name: approve_sanity
              status:
                - failure
                - skipped
                - timeout
                - error
                - cancelled
          inputResources:
            - name: this_repo
            - name: stepStatusBag
          integrations:
            - name: sanity_platform
        execution:
          onExecute:
            - pushd ${res_this_repo_resourcePath}/scripts
            - npm ci
            - export API_URL="${int_sanity_platform_url}/pipelines/api/v1"
            - export API_TOKEN="Bearer ${int_sanity_platform_accessToken}"
            - node index.js sanityGate --stepName $qualityGateStep --runId $triggerRunId --comment "rejected because few of the tests failed"
