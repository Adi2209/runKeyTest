pipelines:
  - name: Sanity_Run_State
    steps:
    - name: trigger
      type: Bash
      configuration:
        inputResources:
          - name: run_state
        outputResources:
          - name: run_state_parallel
          - name: run_state_series_parallel
          - name: run_state_series
      execution:
        onStart: 
          - write_output run_state_parallel "triggerRunId=${run_id}"
          - write_output run_state_parallel "qualityGateStep=run_state_parallel_gate"
          
          - write_output run_state_series_parallel "triggerRunId=${run_id}"
          - write_output run_state_series_parallel "qualityGateStep=run_state_series_parallel_gate"
  
          - write_output run_state_series "triggerRunId=${run_id}"
          - write_output run_state_series "qualityGateStep=run_state_series_gate"
  
    - name: run_state_parallel_gate
      type: Bash
      configuration:
        requiresApproval: true
        inputResources:
          - name: run_state_parallel
      execution:
        onExecute:
          - echo "Basic sanity done"

    - name: run_state_series_parallel_gate
      type: Bash
      configuration:
        requiresApproval: true
        inputResources:
          - name: run_state_series_parallel
      execution:
        onExecute:
          - echo "Basic sanity done"


    - name: run_state_series_gate
      type: Bash
      configuration:
        requiresApproval: true
        inputResources:
          - name: run_state_series
      execution:
        onExecute:
          - echo "Basic sanity done"


    - name: check_sanity
      type: Bash
      configuration:
        inputSteps:
          - name: run_state_series_gate
          - name: run_state_parallel_gate
          - name: run_state_series_parallel_gate
      execution:
        onExecute:
          - echo "All sanity done"

    - name: approve_sanity
      configuration:
        inputSteps:
          - name: check_sanity
        inputResources:
          - name: this_repo
          - name: run_state
        integrations:
          - name: sanity_platform
      type: Bash
      execution:
        onExecute:
          - pushd ${res_this_repo_resourcePath}/scripts
          - npm ci
          - export API_URL="${int_sanity_platform_url}/pipelines/api/v1"
          - export API_TOKEN="Bearer ${int_sanity_platform_accessToken}"
          - node index.js sanityGate --stepName $qualityGateStep --runId $triggerRunId --approved --comment "approved all tests passed"

    - name: reject_sanity
      configuration:
        inputSteps:
          - name: approve_sanity
            status:
              - "failure"
              - "error"
              - "skipped"
              - "cancelled"
              - "timeout"
        inputResources:
          - name: this_repo
          - name: run_state
        integrations:
          - name: sanity_platform
      type: Bash
      execution:
        onExecute:
          - pushd ${res_this_repo_resourcePath}/scripts
          - npm ci
          - export API_URL="${int_sanity_platform_url}/pipelines/api/v1"
          - export API_TOKEN="Bearer ${int_sanity_platform_accessToken}"
          - node index.js sanityGate --stepName $qualityGateStep --runId $triggerRunId --comment "rejected because few of the tests failed"